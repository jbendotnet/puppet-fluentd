
# !!! generated by puppet !!!
# Matcher for '<%= @name %>''

<match <%= @pattern.kind_of?(Array) ? @pattern.join(' ') : @pattern -%> >
<%

  # This code is very fragile
  # it tries to work around the lack of recursion in the ERB templates
  # by creating a stack of operations to work upon, where each
  # hash or array seen is unpacked and placed onto the top of the stack
  
  conf = @config

  while (c = conf.shift) do
       key   = c[0]
       value = c[1]
       case value
         when Hash 
            conf.store( "<%s>" % key, '')
            value.each { |key, value|  conf.store( "  %s" % key, value) }
            conf.store( "</%s>" % key, '')
         when Array
            scope.function_fail(['FluentD::Match  - Arrays are not supported in config '])
         else -%>
            <%= '%s %s' % [key, value] %>
    <%-   end -%>
<%- end -%>

</match>
