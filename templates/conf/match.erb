
# !!! generated by puppet !!!
# Matcher for '<%= @name %>''
<%
# Deal with deprecated values here

# set configuration to the deprecated value if content isnt set
conf = @content.nil? ? @type_config : @content

#ensure content type is defined
conf['type'] ||= @type

#End of deprecation nonsense
%>

<%# 
For each configuration element provided check its type and
respond accordingly.
1. if its a Hash, create a section using the outling key as the container 'XML'
   and each child key/value pair as an option field
2. if the value is an Array, Assume it contains a hash and create external containers
  each time you see an array element - dump as hash
3. if the value is a simple key/value pair, just output as normal
-%>
<match <%= @pattern.kind_of?(Array) ? @pattern.join(' ') : @pattern -%>>
<% conf.each do |option, param| -%>
  <%- if param.is_a?( Hash ) -%>
    <<%= option %>>
    <%- param.each do |k,v| -%>
        <%= k %> <%= v %>
    <%- end -%>
    </<%= option %>>
  <%- elsif param.is_a?( Array ) -%>
    <% param.each do |param| %>
        <<%= option %>>
          <%- param.each do |k,v| -%>
              <%= k %> <%= v %>
          <%- end -%>
        </<%= option %>>
    <% end -%>
  <%- else %>
     <%= option -%> <%= param %>
  <% end %>
<% end %>
</match>
